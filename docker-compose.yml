services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: door_manufacturing_db
    environment:
      POSTGRES_DB: ${DB_NAME:-door_manufacturing}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - door_network

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: door_manufacturing_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - door_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: door_manufacturing_backend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-door_manufacturing}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      UPLOAD_PATH: /app/uploads
      FRONTEND_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./backend/src:/app/src
      - ./backend/database:/app/database
      - uploads_data:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - door_network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: door_manufacturing_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://backend:3000
      API_URL: http://backend:3000
      FRONTEND_URL: http://localhost:3001
      NEXT_PUBLIC_APP_ENV: ${NEXT_PUBLIC_APP_ENV:-development}
      NODE_ENV: development
      NEXT_PUBLIC_NODE_ENV: development
    ports:
      - "3001:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/next.config.js:/app/next.config.js
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./frontend/postcss.config.js:/app/postcss.config.js
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/next-env.d.ts:/app/next-env.d.ts
    depends_on:
      - backend
    networks:
      - door_network
    command: npm run start

volumes:
  postgres_data:
  redis_data:
  uploads_data:

networks:
  door_network:
    driver: bridge
